[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_io_hlt
	EXTERN	_io_load_eflags
	EXTERN	_io_cli
	EXTERN	_io_out8
	EXTERN	_io_store_eflags
	EXTERN	_hankaku
[FILE "bootpack.c"]
[SECTION .data]
LC0:
	DB	x00
LC1:
	DB	"Hello, world!",0x00
LC2:
	DB	"My Twitter name is",0x00
LC3:
	DB	"@siroRabi_jk",0x00
LC4:
	DB	"Please follow me!",0x00
[SECTION .text]
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	ECX,1922
	MOV	EBP,ESP
	PUSH	EDI
	CLD
	PUSH	ESI
	LEA	EDI,DWORD [-1944+EBP]
	SUB	ESP,1936
	MOV	ESI,LC0
	REP
	MOVSB
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_init_screen
	PUSH	LC1
	PUSH	7
	PUSH	10
	PUSH	10
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	ADD	ESP,36
	PUSH	LC2
	PUSH	7
	PUSH	31
	PUSH	30
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	PUSH	LC3
	PUSH	2
	PUSH	80
	PUSH	30
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	ADD	ESP,48
	PUSH	LC3
	PUSH	2
	PUSH	80
	PUSH	31
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	PUSH	LC4
	PUSH	7
	PUSH	120
	PUSH	10
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	ADD	ESP,48
	PUSH	LC4
	PUSH	7
	PUSH	120
	PUSH	11
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	LEA	EAX,DWORD [-1944+EBP]
	PUSH	EAX
	PUSH	7
	PUSH	70
	PUSH	150
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putimage
	ADD	ESP,48
L2:
	CALL	_io_hlt
	JMP	L2
[SECTION .data]
_table_rgb.0:
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-58
	DB	-58
	DB	-58
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	-124
	DB	-124
	DB	-124
[SECTION .text]
	GLOBAL	_init_palette
_init_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	_table_rgb.0
	PUSH	15
	PUSH	0
	CALL	_set_palette
	LEAVE
	RET
	GLOBAL	_set_palette
_set_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	MOV	EBX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	ESI,DWORD [16+EBP]
	CALL	_io_load_eflags
	MOV	DWORD [-16+EBP],EAX
	CALL	_io_cli
	PUSH	EBX
	PUSH	968
	CALL	_io_out8
	CMP	EBX,EDI
	POP	EAX
	POP	EDX
	JLE	L11
L13:
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_io_store_eflags
L11:
	MOV	AL,BYTE [ESI]
	INC	EBX
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [1+ESI]
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [2+ESI]
	SHR	AL,2
	ADD	ESI,3
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	ADD	ESP,24
	CMP	EBX,EDI
	JLE	L11
	JMP	L13
	GLOBAL	_boxfill8
_boxfill8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EDI
	PUSH	EDI
	MOV	AL,BYTE [16+EBP]
	MOV	ECX,DWORD [24+EBP]
	MOV	EDI,DWORD [28+EBP]
	MOV	BYTE [-13+EBP],AL
	CMP	ECX,DWORD [32+EBP]
	JG	L26
	MOV	EBX,DWORD [12+EBP]
	IMUL	EBX,ECX
L24:
	MOV	EDX,DWORD [20+EBP]
	CMP	EDX,EDI
	JG	L28
	MOV	ESI,DWORD [8+EBP]
	ADD	ESI,EBX
	ADD	ESI,EDX
	MOV	DWORD [-20+EBP],ESI
L23:
	MOV	ESI,DWORD [-20+EBP]
	MOV	AL,BYTE [-13+EBP]
	INC	EDX
	MOV	BYTE [ESI],AL
	INC	ESI
	MOV	DWORD [-20+EBP],ESI
	CMP	EDX,EDI
	JLE	L23
L28:
	INC	ECX
	ADD	EBX,DWORD [12+EBP]
	CMP	ECX,DWORD [32+EBP]
	JLE	L24
L26:
	POP	EBX
	POP	ESI
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_init_screen
_init_screen:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	EAX,DWORD [16+EBP]
	MOV	EDI,DWORD [12+EBP]
	SUB	EAX,29
	DEC	EDI
	PUSH	EAX
	PUSH	EDI
	PUSH	0
	PUSH	0
	PUSH	14
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,28
	PUSH	EAX
	PUSH	EDI
	PUSH	EAX
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,27
	PUSH	EAX
	PUSH	EDI
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	DEC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	EDI
	SUB	EAX,26
	PUSH	EAX
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	ESI,DWORD [16+EBP]
	ADD	ESP,56
	SUB	ESI,24
	PUSH	ESI
	PUSH	59
	PUSH	ESI
	PUSH	3
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,4
	PUSH	EAX
	MOV	DWORD [-16+EBP],EAX
	PUSH	2
	PUSH	ESI
	PUSH	2
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [-16+EBP]
	PUSH	59
	PUSH	DWORD [-16+EBP]
	PUSH	3
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,5
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	59
	SUB	EAX,23
	PUSH	EAX
	MOV	DWORD [-20+EBP],EAX
	PUSH	59
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,3
	MOV	DWORD [-24+EBP],EAX
	PUSH	EAX
	PUSH	59
	PUSH	EAX
	PUSH	2
	PUSH	0
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-24+EBP]
	PUSH	60
	PUSH	ESI
	PUSH	60
	PUSH	0
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EDI,DWORD [12+EBP]
	ADD	ESP,56
	MOV	EBX,DWORD [12+EBP]
	SUB	EBX,4
	SUB	EDI,47
	PUSH	ESI
	PUSH	EBX
	PUSH	ESI
	PUSH	EDI
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-16+EBP]
	PUSH	EDI
	PUSH	DWORD [-20+EBP]
	PUSH	EDI
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [-24+EBP]
	PUSH	EBX
	PUSH	DWORD [-24+EBP]
	PUSH	EDI
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [12+EBP]
	PUSH	DWORD [-24+EBP]
	SUB	EAX,3
	PUSH	EAX
	PUSH	ESI
	PUSH	EAX
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_putfont8
_putfont8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	MOV	EDI,DWORD [28+EBP]
	MOV	BL,BYTE [24+EBP]
L43:
	MOV	EAX,DWORD [20+EBP]
	MOV	EDX,DWORD [16+EBP]
	ADD	EAX,ESI
	IMUL	EAX,DWORD [12+EBP]
	ADD	EAX,DWORD [8+EBP]
	LEA	ECX,DWORD [EDX+EAX*1]
	MOV	DL,BYTE [ESI+EDI*1]
	TEST	DL,DL
	JNS	L35
	MOV	BYTE [ECX],BL
L35:
	MOV	AL,DL
	AND	EAX,64
	TEST	AL,AL
	JE	L36
	MOV	BYTE [1+ECX],BL
L36:
	MOV	AL,DL
	AND	EAX,32
	TEST	AL,AL
	JE	L37
	MOV	BYTE [2+ECX],BL
L37:
	MOV	AL,DL
	AND	EAX,16
	TEST	AL,AL
	JE	L38
	MOV	BYTE [3+ECX],BL
L38:
	MOV	AL,DL
	AND	EAX,8
	TEST	AL,AL
	JE	L39
	MOV	BYTE [4+ECX],BL
L39:
	MOV	AL,DL
	AND	EAX,4
	TEST	AL,AL
	JE	L40
	MOV	BYTE [5+ECX],BL
L40:
	MOV	AL,DL
	AND	EAX,2
	TEST	AL,AL
	JE	L41
	MOV	BYTE [6+ECX],BL
L41:
	AND	EDX,1
	TEST	DL,DL
	JE	L33
	MOV	BYTE [7+ECX],BL
L33:
	INC	ESI
	CMP	ESI,15
	JLE	L43
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_putfonts8_asc
_putfonts8_asc:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	MOV	EBX,DWORD [28+EBP]
	MOV	AL,BYTE [24+EBP]
	MOV	BYTE [-13+EBP],AL
	MOV	ESI,DWORD [16+EBP]
	MOV	EDI,DWORD [20+EBP]
	CMP	BYTE [EBX],0
	JNE	L51
L53:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L51:
	MOVZX	EAX,BYTE [EBX]
	SAL	EAX,4
	INC	EBX
	ADD	EAX,_hankaku
	PUSH	EAX
	MOVSX	EAX,BYTE [-13+EBP]
	PUSH	EAX
	PUSH	EDI
	PUSH	ESI
	ADD	ESI,8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,24
	CMP	BYTE [EBX],0
	JNE	L51
	JMP	L53
	GLOBAL	_putimage
_putimage:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	XOR	EBX,EBX
	SUB	ESP,16
	MOV	AL,BYTE [24+EBP]
	MOV	EDX,DWORD [28+EBP]
	MOV	BYTE [-13+EBP],AL
	MOV	DWORD [-28+EBP],0
	MOV	DWORD [-20+EBP],0
	CMP	BYTE [EDX],0
	JE	L100
L98:
	MOV	EAX,DWORD [20+EBP]
	MOV	ECX,DWORD [16+EBP]
	ADD	EAX,DWORD [-20+EBP]
	MOV	EDI,DWORD [28+EBP]
	MOV	EDX,DWORD [-28+EBP]
	IMUL	EAX,DWORD [12+EBP]
	ADD	EAX,DWORD [8+EBP]
	LEA	ESI,DWORD [ECX+EAX*1]
	MOV	AL,BYTE [EDX+EDI*1]
	CMP	AL,65
	JE	L109
L59:
	CMP	AL,66
	JE	L110
L60:
	CMP	AL,67
	JE	L111
L61:
	CMP	AL,68
	JE	L112
L62:
	CMP	AL,69
	JE	L113
L63:
	CMP	AL,70
	JE	L114
L64:
	CMP	AL,71
	JE	L115
L65:
	CMP	AL,72
	JE	L116
L66:
	CMP	AL,73
	JE	L117
L67:
	CMP	AL,74
	JE	L118
L68:
	CMP	AL,75
	JE	L119
L69:
	CMP	AL,76
	JE	L120
L70:
	CMP	AL,78
	JE	L121
L71:
	CMP	AL,83
	JE	L122
L72:
	CMP	AL,84
	JE	L123
L78:
	CMP	AL,85
	JE	L124
L84:
	CMP	AL,86
	JE	L125
L90:
	CMP	AL,49
	JE	L126
L96:
	CMP	AL,56
	JE	L127
L57:
	MOV	ECX,DWORD [28+EBP]
	INC	DWORD [-28+EBP]
	MOV	EDI,DWORD [-28+EBP]
	CMP	BYTE [EDI+ECX*1],0
	JNE	L98
L100:
	ADD	ESP,16
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L127:
	XOR	EBX,EBX
	INC	DWORD [-20+EBP]
	JMP	L57
L126:
	MOV	DL,BYTE [-13+EBP]
	MOV	BYTE [EBX+ESI*1],DL
	INC	EBX
	JMP	L96
L125:
	LEA	EDX,DWORD [ESI+EBX*1]
	MOV	DWORD [-24+EBP],EDX
	MOV	EDX,7
L95:
	MOV	EDI,DWORD [-24+EBP]
	MOV	CL,BYTE [-13+EBP]
	MOV	BYTE [EDI],CL
	INC	EDI
	DEC	EDX
	MOV	DWORD [-24+EBP],EDI
	JNS	L95
	ADD	EBX,8
	JMP	L90
L124:
	LEA	EDX,DWORD [ESI+EBX*1]
	MOV	DWORD [-24+EBP],EDX
	MOV	EDX,29
L89:
	MOV	EDI,DWORD [-24+EBP]
	MOV	CL,BYTE [-13+EBP]
	MOV	BYTE [EDI],CL
	INC	EDI
	DEC	EDX
	MOV	DWORD [-24+EBP],EDI
	JNS	L89
	ADD	EBX,30
	JMP	L84
L123:
	LEA	EDX,DWORD [ESI+EBX*1]
	MOV	DWORD [-24+EBP],EDX
	MOV	EDX,20
L83:
	MOV	EDI,DWORD [-24+EBP]
	MOV	CL,BYTE [-13+EBP]
	MOV	BYTE [EDI],CL
	INC	EDI
	DEC	EDX
	MOV	DWORD [-24+EBP],EDI
	JNS	L83
	ADD	EBX,21
	JMP	L78
L122:
	LEA	ECX,DWORD [ESI+EBX*1]
	MOV	EDX,46
	MOV	DWORD [-24+EBP],ECX
L77:
	MOV	EDI,DWORD [-24+EBP]
	MOV	CL,BYTE [-13+EBP]
	MOV	BYTE [EDI],CL
	INC	EDI
	DEC	EDX
	MOV	DWORD [-24+EBP],EDI
	JNS	L77
	ADD	EBX,47
	JMP	L72
L121:
	ADD	EBX,4
	JMP	L71
L120:
	ADD	EBX,7
	JMP	L70
L119:
	ADD	EBX,19
	JMP	L69
L118:
	ADD	EBX,37
	JMP	L68
L117:
	ADD	EBX,18
	JMP	L67
L116:
	ADD	EBX,12
	JMP	L66
L115:
	ADD	EBX,17
	JMP	L65
L114:
	ADD	EBX,11
	JMP	L64
L113:
	ADD	EBX,52
	JMP	L63
L112:
	ADD	EBX,24
	JMP	L62
L111:
	ADD	EBX,31
	JMP	L61
L110:
	ADD	EBX,5
	JMP	L60
L109:
	ADD	EBX,58
	JMP	L59
